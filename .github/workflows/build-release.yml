name: Build Release new version

on:
  repository_dispatch:
    types: [build-release]
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: "Version of the package to build"
        required: true
      environment:
        type: string
        description: "Environment to build"
        required: false

permissions:
  id-token: write
  contents: read

jobs:
  update-docker:
    uses: ./.github/workflows/update-docker.yml
    with:
      version: ${{ github.event.client_payload.version || github.event.inputs.version }}
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
  
  update-valkey-hashes:
    uses: ./.github/workflows/update-valkey-hashes.yml
    with:
      version: ${{ github.event.client_payload.version || github.event.inputs.version }}
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

  generate-build-matrix:
    name: Generating build matrix
    runs-on: ubuntu-latest
    outputs:
      x86_64-build-matrix: ${{ steps.set-matrix.outputs.x86_64-build-matrix }}
      arm64-build-matrix: ${{ steps.set-matrix.outputs.arm64-build-matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ./.github/actions/generate-package-build-matrix
        id: set-matrix
        with:
          ref: ${{ github.event.client_payload.version || github.event.inputs.version }}
  
  check-environment:
    name: Check environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.check-env.outputs.environment }}
    steps:
      - name: Determine environment
        id: check-env
        run: |
          ENVIRONMENT=${{ github.event.client_payload.environment || github.event.inputs.environment }}
          if [[ "$ENVIRONMENT" == "dev" ]]; then
            echo "Environment is dev"
            echo "environment=dev" >> $GITHUB_OUTPUT
          else
            echo "Environment is prod"
            echo "environment=prod" >> $GITHUB_OUTPUT
          fi

  release-build-linux-x86-packages:
    needs:
      - generate-build-matrix
      - check-environment
    uses: ./.github/workflows/call-build-linux-x86-packages.yml
    with:
      version: ${{ github.event.client_payload.version || github.event.inputs.version }}
      build_matrix: ${{ needs.generate-build-matrix.outputs.x86_64-build-matrix }}
      region: us-west-2
    secrets:
      bucket_name: ${{ needs.check-environment.outputs.environment == 'dev' && secrets.AWS_TEST_BUCKET || secrets.AWS_S3_BUCKET }}
      role_to_assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

  # release-build-linux-arm-packages:
  #   needs:
  #     - generate-build-matrix
  #   uses: ./.github/workflows/call-build-linux-arm-packages.yml
  #   with:
  #     version: ${{ github.event.client_payload.version || github.event.inputs.version }}
  #     build_matrix: ${{ needs.generate-build-matrix.outputs.arm64-build-matrix }}
  #     region: us-west-2
  #   secrets:
  #     bucket_name: ${{ needs.check-environment.outputs.environment == 'dev' && secrets.AWS_TEST_BUCKET || secrets.AWS_S3_BUCKET }}
  #     role_to_assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}